--- pipe-lf.hcl	2024-02-24 10:25:49.518345084 +0900
+++ pipe-lf.hcl.new	2024-02-24 11:11:57.487476380 +0900
@@ -271,6 +271,7 @@
 ##   from memory stage when appropriate
 ## Here it is set to the default used in the normal pipeline
 word e_valA = [
+	E_icode in { IPUSHQ, IRMMOVQ } && E_srcA == M_dstM : m_valM;
 	1 : E_valA;  # Use valA from stage pipe register
 ];
 
@@ -329,7 +330,9 @@
 bool F_stall =
 	# Conditions for a load/use hazard
 	## Set this to the new load/use condition
-	0 ||
+	E_icode in { IMRMOVQ, IPOPQ } &&
+	 E_dstM in { d_srcA, d_srcB } &&
+	 !(D_icode == IPUSHQ || D_icode == IRMMOVQ && E_dstM == d_srcA) ||
 	# Stalling at fetch while ret passes through pipeline
 	IRET in { D_icode, E_icode, M_icode };
 
@@ -338,14 +341,16 @@
 bool D_stall = 
 	# Conditions for a load/use hazard
 	## Set this to the new load/use condition
-	0; 
+	E_icode in { IMRMOVQ, IPOPQ } &&
+	 E_dstM in { d_srcA, d_srcB } &&
+	 !(D_icode == IPUSHQ || D_icode == IRMMOVQ && E_dstM == d_srcA);
 
 bool D_bubble =
 	# Mispredicted branch
 	(E_icode == IJXX && !e_Cnd) ||
 	# Stalling at fetch while ret passes through pipeline
 	# but not condition for a load/use hazard
-	!(E_icode in { IMRMOVQ, IPOPQ } && E_dstM in { d_srcA, d_srcB }) &&
+	!(E_icode in { IMRMOVQ, IPOPQ } && E_dstM in { d_srcA, d_srcB } && !(D_icode == IPUSHQ || D_icode == IRMMOVQ && E_dstM == d_srcA)) &&
 	  IRET in { D_icode, E_icode, M_icode };
 
 # Should I stall or inject a bubble into Pipeline Register E?
@@ -356,7 +361,9 @@
 	(E_icode == IJXX && !e_Cnd) ||
 	# Conditions for a load/use hazard
 	## Set this to the new load/use condition
-	0;
+	E_icode in { IMRMOVQ, IPOPQ } &&
+	 E_dstM in { d_srcA, d_srcB } &&
+	 !(D_icode == IPUSHQ || D_icode == IRMMOVQ && E_dstM == d_srcA);
 
 # Should I stall or inject a bubble into Pipeline Register M?
 # At most one of these can be true.
