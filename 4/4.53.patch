--- pipe-nobypass.hcl	2024-02-23 22:54:02.041469792 +0900
+++ pipe-nobypass.hcl.new	2024-02-23 22:57:51.481397847 +0900
@@ -309,7 +309,12 @@
 bool F_bubble = 0;
 bool F_stall =
 	# Modify the following to stall the update of pipeline register F
-	0 ||
+	(E_icode in { IMRMOVQ, IPOPQ } && E_dstM in { d_srcA, d_srcB }) ||
+	(E_icode in { IOPQ, IRRMOVQ, IIRMOVQ, IPUSHQ, IPOPQ, ICALL, IRET } && e_dstE in { d_srcA, d_srcB }) ||
+	(M_icode in { IMRMOVQ, IPOPQ } && M_dstM in { d_srcA, d_srcB }) ||
+	(M_icode in { IOPQ, IRRMOVQ, IIRMOVQ, IPUSHQ, IPOPQ, ICALL, IRET } && M_dstE in { d_srcA, d_srcB }) ||
+	(W_icode in { IMRMOVQ, IPOPQ } && (W_dstM in { d_srcA, d_srcB })) ||
+	(W_icode in { IOPQ, IRRMOVQ, IIRMOVQ, IPUSHQ, IPOPQ, ICALL, IRET } && W_dstE in { d_srcA, d_srcB }) ||
 	# Stalling at fetch while ret passes through pipeline
 	IRET in { D_icode, E_icode, M_icode };
 
@@ -317,13 +322,28 @@
 # At most one of these can be true.
 bool D_stall = 
 	# Modify the following to stall the instruction in decode
-	0;
+	!(E_icode == IJXX && !e_Cnd) &&
+	(
+		(E_icode in { IMRMOVQ, IPOPQ } && E_dstM in { d_srcA, d_srcB }) ||
+		(E_icode in { IOPQ, IRRMOVQ, IIRMOVQ, IPUSHQ, IPOPQ, ICALL, IRET } && e_dstE in { d_srcA, d_srcB }) ||
+		(M_icode in { IMRMOVQ, IPOPQ } && M_dstM in { d_srcA, d_srcB }) ||
+		(M_icode in { IOPQ, IRRMOVQ, IIRMOVQ, IPUSHQ, IPOPQ, ICALL, IRET } && M_dstE in { d_srcA, d_srcB }) ||
+		(W_icode in { IMRMOVQ, IPOPQ } && (W_dstM in { d_srcA, d_srcB })) ||
+		(W_icode in { IOPQ, IRRMOVQ, IIRMOVQ, IPUSHQ, IPOPQ, ICALL, IRET } && W_dstE in { d_srcA, d_srcB })
+	);
 
 bool D_bubble =
 	# Mispredicted branch
 	(E_icode == IJXX && !e_Cnd) ||
 	# Stalling at fetch while ret passes through pipeline
-	!(E_icode in { IMRMOVQ, IPOPQ } && E_dstM in { d_srcA, d_srcB }) &&
+	!(
+		(E_icode in { IMRMOVQ, IPOPQ } && E_dstM in { d_srcA, d_srcB }) ||
+		(E_icode in { IOPQ, IRRMOVQ, IIRMOVQ, IPUSHQ, IPOPQ, ICALL, IRET } && e_dstE in { d_srcA, d_srcB }) ||
+		(M_icode in { IMRMOVQ, IPOPQ } && M_dstM in { d_srcA, d_srcB }) ||
+		(M_icode in { IOPQ, IRRMOVQ, IIRMOVQ, IPUSHQ, IPOPQ, ICALL, IRET } && M_dstE in { d_srcA, d_srcB }) ||
+		(W_icode in { IMRMOVQ, IPOPQ } && (W_dstM in { d_srcA, d_srcB })) ||
+		(W_icode in { IOPQ, IRRMOVQ, IIRMOVQ, IPUSHQ, IPOPQ, ICALL, IRET } && W_dstE in { d_srcA, d_srcB })
+	) &&
 	# but not condition for a generate/use hazard
 	!0 &&
 	  IRET in { D_icode, E_icode, M_icode };
@@ -335,7 +355,12 @@
 	# Mispredicted branch
 	(E_icode == IJXX && !e_Cnd) ||
 	# Modify the following to inject bubble into the execute stage
-	0;
+	(E_icode in { IMRMOVQ, IPOPQ } && E_dstM in { d_srcA, d_srcB }) ||
+	(E_icode in { IOPQ, IRRMOVQ, IIRMOVQ, IPUSHQ, IPOPQ, ICALL, IRET } && e_dstE in { d_srcA, d_srcB }) ||
+	(M_icode in { IMRMOVQ, IPOPQ } && M_dstM in { d_srcA, d_srcB }) ||
+	(M_icode in { IOPQ, IRRMOVQ, IIRMOVQ, IPUSHQ, IPOPQ, ICALL, IRET } && M_dstE in { d_srcA, d_srcB }) ||
+	(W_icode in { IMRMOVQ, IPOPQ } && (W_dstM in { d_srcA, d_srcB })) ||
+	(W_icode in { IOPQ, IRRMOVQ, IIRMOVQ, IPUSHQ, IPOPQ, ICALL, IRET } && W_dstE in { d_srcA, d_srcB });
 
 # Should I stall or inject a bubble into Pipeline Register M?
 # At most one of these can be true.
